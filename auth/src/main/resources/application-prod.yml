server:
  port: ${PORT:8085}

application:
  keycloak:
    host: ${KEYCLOAK_HOST}
    realm: ${KEYCLOAK_REALM_NAME}

    certs-id: ${KEYCLOAK_REALM_CERTS_RS256}
    client-id: ${KEYCLOAK_CLIENT_ID}
    client-secret: ${KEYCLOAK_CLIENT_SECRET}
    client-grant-type: client_credentials
    user-grant-type: password

    certs-url: http://${application.keycloak.host}/auth/realms/${application.keycloak.realm}/protocol/openid-connect/certs
    token-url: http://${application.keycloak.host}/auth/realms/${application.keycloak.realm}/protocol/openid-connect/token
    user-info-url: http://${application.keycloak.host}/auth/realms/${application.keycloak.realm}/protocol/openid-connect/userinfo
    users-url: http://${application.keycloak.host}/auth/admin/realms/${application.keycloak.realm}/users
    reset-password-url: http://${application.keycloak.host}/auth/admin/realms/${application.keycloak.realm}/users/{sub}/reset-password

spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate.format_sql: true

management:
  endpoints.web.exposure.include: prometheus,health,info
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  prometheus:
    metrics:
      export:
        enabled: true
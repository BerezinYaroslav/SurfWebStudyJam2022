version: "3.9"

x-db-cred: &db-cred
  DB_HOST: db-service
  DB_ADDR: db-service
  DB_USER: postgres
  DB_PASSWORD: postgres

services:
  db-service:
    restart: unless-stopped
    image: 'postgres:14.1-alpine'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data

  pgadmin-service:
    restart: unless-stopped
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "80:80"
    volumes:
      - pgadmin:/var/lib/pgadmin
  
  keycloak-service:
    restart: unless-stopped
    image: jboss/keycloak
    depends_on:
      - db-service
    environment:
      DB_VENDOR: POSTGRES
      <<: *db-cred
      DB_DATABASE: studyjam_keycloak
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
    ports:
      - "8888:8080"

  zookeeper-service:
    restart: unless-stopped
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: "zookeeper-service:2888:3888"
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log
      - zookeeper_secrets:/etc/zookeeper/secrets

  kafka-service:
    restart: unless-stopped
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper-service
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-service:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-service:29092,PLAINTEXT_HOST://kafka-service:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/var/lib/kafka/data
      - kafka_secrets:/etc/kafka/secrets

  kafka-ui-service:
    restart: unless-stopped
    image: provectuslabs/kafka-ui
    depends_on:
      - kafka-service
    environment:
       KAFKA_CLUSTERS_0_NAME: surfwebstudyjam
       KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka-service:29092"
       SERVER_PORT: 9094
    ports:
      - "9094:9094"

  kafka-init-service:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka-service
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      echo -e 'List topics from broker...'
      kafka-topics --bootstrap-server kafka-service:29092 --list
      
      echo -e 'Creating kafka topics on broker...'
      kafka-topics --bootstrap-server kafka-service:29092 --create --if-not-exists --topic receiving-request-topic --replication-factor 1 --partitions 3
      
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka-service:29092 --list
      "

  minio-service:
    restart: unless-stopped
    image: minio/minio:latest
    command: 
      server --console-address ":9001" /data/
    environment:
      MINIO_ROOT_USER: surfwebstudyjam
      MINIO_ROOT_PASSWORD: surfwebstudyjam
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  quiz-service:
    restart: unless-stopped
    build:
      context: quiz
      dockerfile: Dockerfile
    image: quiz
    environment:
      SPRING_PROFILES_ACTIVE: prod
      PORT: 8080
    ports:
      - "8087:8080"

  defence-service:
    restart: unless-stopped
    build:
      context: defenceOfProject
      dockerfile: Dockerfile
    image: defence
    environment:
      SPRING_PROFILES_ACTIVE: prod
      PORT: 8080
    ports:
      - "8086:8080"

  auth-service:
    restart: unless-stopped
    build:
      context: auth
      dockerfile: Dockerfile
    image: auth
    depends_on:
      - keycloak-service
      - db-service
    environment:
      SPRING_PROFILES_ACTIVE: prod
      PORT: 80
      KEYCLOAK_HOST: keycloak-service:8080
      KEYCLOAK_REALM_NAME: surfwebstudyjam
      KEYCLOAK_REALM_CERTS_RS256: 8mCgZB6wVhhS3SiI7BPczlWX_co1c5AjrsxnYzT2EBM
      KEYCLOAK_CLIENT_ID: authservice
      KEYCLOAK_CLIENT_SECRET: enmVuQ9WRO0VpUIqSLDPB7llRK2YbkrY
      <<: *db-cred
      DB_NAME: studyjam_auth
    ports:
      - "8085:80"

  testing-service:
    restart: unless-stopped
    build:
      context: testing
      dockerfile: Dockerfile
    image: testing
    environment:
      SPRING_PROFILES_ACTIVE: prod
      PORT: 8080
    ports:
      - "8084:8080"

  mail-service:
    restart: unless-stopped
    build:
      context: mail
      dockerfile: Dockerfile
    image: mail
    environment:
      SPRING_PROFILES_ACTIVE: prod
      PORT: 8080
    ports:
      - "8083:8080"

  report-service:
    restart: unless-stopped
    build:
      context: report
      dockerfile: Dockerfile
    image: report
    environment:
      SPRING_PROFILES_ACTIVE: prod
      PORT: 8080
    ports:
      - "8082:8080"

  external-files-service:
    restart: unless-stopped
    build:
      context: external-files
      dockerfile: Dockerfile
    image: external_files
    depends_on:
      - minio-service
      - db-service
    environment:
      SPRING_PROFILES_ACTIVE: prod
      PORT: 80
      <<: *db-cred
      DB_NAME: studyjam_core
      S3_URL: http://minio-service
      S3_HOST: 9000
      S3_BUCKET_NAME: surfwebstudyjam
      S3_ACCESS_KEY: surfwebstudyjam
      S3_SECRET_KEY: surfwebstudyjam
      MAX_FILE_SIZE: 30MB
      MAX_REQ_SIZE: 30MB
      CLAIM_INTERVAL_SECONDS: 3600
    ports:
      - "8081:80"

  core-service:
    restart: unless-stopped
    build:
      context: core
      dockerfile: Dockerfile
    image: core
    depends_on:
      - db-service
#      - quiz-service
#      - defence-service
#      - auth-service
#      - testing-service
#      - mail-service
#      - report-service
#      - external-files-service
    environment:
      SPRING_PROFILES_ACTIVE: prod
      PORT: 80
      <<: *db-cred
      DB_NAME: studyjam_core
      KAFKA_HOST: kafka-service:9092
      AUTH_API: http://auth-service/credentialsServiceApi
      EXI_FILES_API: http://external-files-service/external-files/s3FileServiceApi
    ports:
      - "8080:80"

  gateway-service:
    restart: unless-stopped
    build:
      context: api-gateway
      dockerfile: Dockerfile
    image: gateway
    depends_on:
      - core-service
    environment:
      SPRING_PROFILES_ACTIVE: prod
      PORT: 8080
      CORE_URL: http://core-service
      EXT_FILES_URL: http://external-files-service
    ports:
      - "8088:8080"

volumes:
  postgres:
  pgadmin:
  zookeeper_data:
  zookeeper_logs:
  zookeeper_secrets:
  kafka_data:
  kafka_secrets:
  minio:

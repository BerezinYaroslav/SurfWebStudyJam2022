version: "3.9"

services:
  db_service:
    restart: unless-stopped
    image: 'postgres:14.1-alpine'
    container_name: db_service_instance
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_db:/var/lib/postgresql/data

  pgadmin_service:
    restart: unless-stopped
    image: dpage/pgadmin4
    container_name: pgadmin_service_instance
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "80:80"
    volumes:
      - pgadmin:/var/lib/pgadmin
  
  keycloak_service:
    restart: unless-stopped
    image: jboss/keycloak
    container_name: keycloak_service_instance
    depends_on:
      - db_service
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: db_service_instance
      DB_DATABASE: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
    ports:
      - "8888:8080"
  
  auth_service:
    restart: unless-stopped
    build:
      context: auth
      dockerfile: Dockerfile
    image: auth_service
    container_name: auth_service_instance
    depends_on:
      - keycloak_service
    environment:
      SPRING_PROFILES_ACTIVE: prod
      PORT: 8080
      KEYCLOAK_HOST: keycloak_service:8080
      KEYCLOAK_CERTS: K8aUK_QgRhBJ1mqLCXn5skBShc5PSY1lsLeKZyYboYE
      KEYCLOAK_SECRET: mjnoLPMym2ZFSkKRKXDV3vnF7yENMKTR
      DB_HOST: db_service_instance
      DB_NAME: studyjam_auth
      DB_USER: postgres
      DB_PASSWORD: postgres
    ports:
      - "8085:8080"

  # Kafka-dev configuration with one broker and one zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: "zookeeper:2888:3888"
    volumes:
      - zookeeper:/var/lib/zookeeper/data

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_MIN_INSYNC_REPLICAS: 2
    volumes:
      - kafka:/var/lib/kafka/data

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    depends_on:
      - kafka
   ports:
      - "9094:9094"
   restart: unless-stopped
   environment:
     KAFKA_CLUSTERS_0_NAME: surf
     KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:29092"
     SERVER_PORT: 9094

  init-kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      echo -e 'List topics from broker...'
      kafka-topics --bootstrap-server kafka:29092 --list
      
      echo -e 'Creating kafka topics on broker...'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic notification-topic --replication-factor 2 --partitions 3
      
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29092 --list
      "

volumes:
  postgres_db:
  pgadmin:
  zookeeper:
  kafka:

